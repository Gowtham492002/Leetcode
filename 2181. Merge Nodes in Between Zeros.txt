2181. Merge Nodes in Between Zeros:

CODE:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeNodes(ListNode head) {
        // int sum = 0;
        // ListNode result = new ListNode();
        // ListNode resulthead = result;
        // while (head!=null){
        //     if (head.val == 0 && sum!=0){
        //         ListNode newnode = new ListNode(sum);
        //         result.next = newnode;
        //         result = result.next;
        //         sum = 0;
        //     }
        //     else{
        //         sum += head.val;
        //     }
        //     head = head.next;

        // }
        // return resulthead.next;
        int sum = 0;
        ListNode curr = head,temp = curr.next , lastcheck = null;
        while (curr.next !=null){
            sum=0;
            while (temp.val!=0){
                sum+=temp.val;
                temp = temp.next;
            }
            curr.val = sum;
            curr.next = temp;
            lastcheck = curr;
            curr = curr.next;
            temp = curr.next;

        }
        lastcheck.next = null;
        return head;
    }
}

Example 1:


Input: head = [0,3,1,0,4,5,2,0]
Output: [4,11]
Explanation: 
The above figure represents the given linked list. The modified list contains
- The sum of the nodes marked in green: 3 + 1 = 4.
- The sum of the nodes marked in red: 4 + 5 + 2 = 11.

Example 2:


Input: head = [0,1,0,3,0,2,2,0]
Output: [1,3,4]
Explanation: 
The above figure represents the given linked list. The modified list contains
- The sum of the nodes marked in green: 1 = 1.
- The sum of the nodes marked in red: 3 = 3.
- The sum of the nodes marked in yellow: 2 + 2 = 4.